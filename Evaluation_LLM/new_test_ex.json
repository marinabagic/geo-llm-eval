[
    {
      "question": "Plot all points in Croatia where 'OC' is below 20.",
      "code": "import os\nimport pandas as pd\nimport geopandas as gpd\nimport matplotlib.pyplot as plt\nos.makedirs(\"plots\", exist_ok=True)\ndf = pd.read_csv(\"LUCAS_with_country_info.csv\")\ndf[\"OC\"] = pd.to_numeric(df[\"OC\"], errors=\"coerce\")\ndf = df[(df[\"Country\"] == \"Croatia\") & (df[\"OC\"] < 20)]\ngdf = gpd.GeoDataFrame(df, geometry=gpd.points_from_xy(df.TH_LONG, df.TH_LAT), crs=\"EPSG:4326\")\ncountries = gpd.read_file(\"../natural_earth_data/ne_10m_admin_0_countries.shp\")\ncroatia = countries[countries[\"NAME\"] == \"Croatia\"].to_crs(\"EPSG:4326\")\nfig, ax = plt.subplots(figsize=(10, 10))\ncroatia.plot(ax=ax, color=\"white\", edgecolor=\"black\")\ngdf.plot(ax=ax, color=\"blue\", marker=\".\", markersize=10)\nplt.title(\"Points in Croatia where 'OC' < 20\")\nplt.tight_layout()\nplt.savefig(\"plots/plot1.png\")"
    },
    {
      "question": "Plot all points in Austria where 'pH_CaCl2' > 5 and LC0_Desc is 'Woodland'.",
      "code": "import os\nimport pandas as pd\nimport geopandas as gpd\nimport matplotlib.pyplot as plt\nos.makedirs(\"plots\", exist_ok=True)\ndf = pd.read_csv(\"LUCAS_with_country_info.csv\")\ndf[\"pH_CaCl2\"] = pd.to_numeric(df[\"pH_CaCl2\"], errors=\"coerce\")\ndf = df[(df[\"Country\"] == \"Austria\") & (df[\"pH_CaCl2\"] > 5) & (df[\"LC0_Desc\"] == \"Woodland\")]\ngdf = gpd.GeoDataFrame(df, geometry=gpd.points_from_xy(df.TH_LONG, df.TH_LAT), crs=\"EPSG:4326\")\ncountries = gpd.read_file(\"../natural_earth_data/ne_10m_admin_0_countries.shp\")\naustria = countries[countries[\"NAME\"] == \"Austria\"].to_crs(\"EPSG:4326\")\nfig, ax = plt.subplots(figsize=(10, 10))\naustria.plot(ax=ax, color=\"white\", edgecolor=\"black\")\ngdf.plot(ax=ax, color=\"green\", marker=\".\", markersize=10)\nplt.title(\"Austria: pH_CaCl2 > 5 and LC0_Desc = Woodland\")\nplt.tight_layout()\nplt.savefig(\"plots/plot2.png\")"
    },
    {
      "question": "Highlight all locations sampled in July 2018, using different colors based on LC0_Desc.",
      "code": "import os\nimport pandas as pd\nimport geopandas as gpd\nimport matplotlib.pyplot as plt\nos.makedirs(\"plots\", exist_ok=True)\ndf = pd.read_csv(\"LUCAS_with_country_info.csv\")\ndf[\"SURVEY_DATE\"] = pd.to_datetime(df[\"SURVEY_DATE\"], errors=\"coerce\")\ndf[\"TH_LAT\"] = pd.to_numeric(df[\"TH_LAT\"], errors=\"coerce\")\ndf[\"TH_LONG\"] = pd.to_numeric(df[\"TH_LONG\"], errors=\"coerce\")\ndf = df.dropna(subset=[\"SURVEY_DATE\", \"LC0_Desc\", \"TH_LAT\", \"TH_LONG\"])\ndf = df[(df[\"SURVEY_DATE\"].dt.year == 2018) & (df[\"SURVEY_DATE\"].dt.month == 7)]\ndf = df[(df[\"TH_LAT\"].between(30, 72)) & (df[\"TH_LONG\"].between(-25, 45))]\ngdf = gpd.GeoDataFrame(df, geometry=gpd.points_from_xy(df.TH_LONG, df.TH_LAT), crs=\"EPSG:4326\")\ncountries = gpd.read_file(\"../natural_earth_data/ne_10m_admin_0_countries.shp\").to_crs(\"EPSG:4326\")\nfig, ax = plt.subplots(figsize=(10, 10))\ncountries.plot(ax=ax, color=\"lightgrey\", edgecolor=\"black\")\ngdf.plot(ax=ax, column=\"LC0_Desc\", categorical=True, legend=True, marker=\".\", markersize=10)\nax.set_xlim(-25, 45)\nax.set_ylim(30, 72)\nplt.title(\"Sampled Locations in July 2018 Colored by LC0_Desc\")\nplt.tight_layout()\nplt.savefig(\"plots/plot3.png\")"
    },
    {
      "question": "Plot all points in Slovakia where 'K' is above its 85th percentile.",
      "code": "import os\nimport pandas as pd\nimport geopandas as gpd\nimport matplotlib.pyplot as plt\nos.makedirs(\"plots\", exist_ok=True)\ndf = pd.read_csv(\"LUCAS_with_country_info.csv\")\ndf[\"K\"] = pd.to_numeric(df[\"K\"], errors=\"coerce\")\ndf[\"TH_LAT\"] = pd.to_numeric(df[\"TH_LAT\"], errors=\"coerce\")\ndf[\"TH_LONG\"] = pd.to_numeric(df[\"TH_LONG\"], errors=\"coerce\")\ndf = df.dropna(subset=[\"K\", \"TH_LAT\", \"TH_LONG\"])\ndf = df[df[\"Country\"] == \"Slovakia\"]\nthreshold = df[\"K\"].quantile(0.85)\ndf = df[df[\"K\"] > threshold]\ngdf = gpd.GeoDataFrame(df, geometry=gpd.points_from_xy(df.TH_LONG, df.TH_LAT), crs=\"EPSG:4326\")\ncountries = gpd.read_file(\"../natural_earth_data/ne_10m_admin_0_countries.shp\").to_crs(\"EPSG:4326\")\nslovakia = countries[countries[\"NAME\"] == \"Slovakia\"]\nfig, ax = plt.subplots(figsize=(10, 10))\nslovakia.plot(ax=ax, color=\"white\", edgecolor=\"black\")\ngdf.plot(ax=ax, color=\"purple\", marker=\".\", markersize=10)\nplt.title(\"Slovakia: Points where K > 85th percentile\")\nplt.tight_layout()\nplt.savefig(\"plots/plot4.png\")"
    },
    {
      "question": "Create a map of Belgium highlighting points where 'pH_H2O' is in the bottom 10 percentile.",
      "code": "import os\nimport pandas as pd\nimport geopandas as gpd\nimport matplotlib.pyplot as plt\nos.makedirs(\"plots\", exist_ok=True)\ndf = pd.read_csv(\"LUCAS_with_country_info.csv\")\ndf[\"pH_H2O\"] = pd.to_numeric(df[\"pH_H2O\"], errors=\"coerce\")\ndf[\"TH_LAT\"] = pd.to_numeric(df[\"TH_LAT\"], errors=\"coerce\")\ndf[\"TH_LONG\"] = pd.to_numeric(df[\"TH_LONG\"], errors=\"coerce\")\ndf = df.dropna(subset=[\"pH_H2O\", \"TH_LAT\", \"TH_LONG\"])\ndf = df[df[\"Country\"] == \"Belgium\"]\nthreshold = df[\"pH_H2O\"].quantile(0.10)\ndf = df[df[\"pH_H2O\"] < threshold]\ngdf = gpd.GeoDataFrame(df, geometry=gpd.points_from_xy(df.TH_LONG, df.TH_LAT), crs=\"EPSG:4326\")\ncountries = gpd.read_file(\"../natural_earth_data/ne_10m_admin_0_countries.shp\").to_crs(\"EPSG:4326\")\nbelgium = countries[countries[\"NAME\"] == \"Belgium\"]\nfig, ax = plt.subplots(figsize=(10, 10))\nbelgium.plot(ax=ax, color=\"white\", edgecolor=\"black\")\ngdf.plot(ax=ax, color=\"blue\", marker=\".\", markersize=10)\nplt.title(\"Belgium: pH_H2O in Bottom 10 Percentile\")\nplt.tight_layout()\nplt.savefig(\"plots/plot5.png\")"
    },
    {
      "question": "Plot all points in Poland where 'OC' > median and color them by LU_DESC.",
      "code": "import os\nimport pandas as pd\nimport geopandas as gpd\nimport matplotlib.pyplot as plt\nos.makedirs(\"plots\", exist_ok=True)\ndf = pd.read_csv(\"LUCAS_with_country_info.csv\")\ndf[\"OC\"] = pd.to_numeric(df[\"OC\"], errors=\"coerce\")\ndf[\"TH_LAT\"] = pd.to_numeric(df[\"TH_LAT\"], errors=\"coerce\")\ndf[\"TH_LONG\"] = pd.to_numeric(df[\"TH_LONG\"], errors=\"coerce\")\ndf = df.dropna(subset=[\"OC\", \"LC0_Desc\", \"TH_LAT\", \"TH_LONG\"])\ndf = df[df[\"Country\"] == \"Poland\"]\nthreshold = df[\"OC\"].median()\ndf = df[df[\"OC\"] > threshold]\ngdf = gpd.GeoDataFrame(df, geometry=gpd.points_from_xy(df.TH_LONG, df.TH_LAT), crs=\"EPSG:4326\")\ncountries = gpd.read_file(\"../natural_earth_data/ne_10m_admin_0_countries.shp\").to_crs(\"EPSG:4326\")\npoland = countries[countries[\"NAME\"] == \"Poland\"]\nfig, ax = plt.subplots(figsize=(10, 10))\npoland.plot(ax=ax, color=\"white\", edgecolor=\"black\")\ngdf.plot(ax=ax, column=\"LC0_Desc\", categorical=True, legend=True, marker=\".\", markersize=10)\nplt.title(\"Poland: OC > Median, Colored by LC0_Desc\")\nplt.tight_layout()\nplt.savefig(\"plots/plot6.png\")"
    },
    {
      "question": "Show how land cover categories vary across France on a map.",
      "code": "import os\nimport pandas as pd\nimport geopandas as gpd\nimport matplotlib.pyplot as plt\nos.makedirs(\"plots\", exist_ok=True)\ndf = pd.read_csv(\"LUCAS_with_country_info.csv\")\ndf[\"TH_LAT\"] = pd.to_numeric(df[\"TH_LAT\"], errors=\"coerce\")\ndf[\"TH_LONG\"] = pd.to_numeric(df[\"TH_LONG\"], errors=\"coerce\")\ndf = df.dropna(subset=[\"TH_LAT\", \"TH_LONG\", \"LC0_Desc\"])\ndf = df[df[\"Country\"] == \"France\"]\ngdf = gpd.GeoDataFrame(df, geometry=gpd.points_from_xy(df.TH_LONG, df.TH_LAT), crs=\"EPSG:4326\")\ncountries = gpd.read_file(\"../natural_earth_data/ne_10m_admin_0_countries.shp\").to_crs(\"EPSG:4326\")\nfrance = countries[countries[\"NAME\"] == \"France\"]\nfrance_mainland = france.explode(index_parts=True).copy()\nfrance_mainland[\"area\"] = france_mainland.geometry.area\nfrance_mainland = france_mainland.sort_values(\"area\", ascending=False).head(1)\nfig, ax = plt.subplots(figsize=(10, 10))\nfrance_mainland.plot(ax=ax, color=\"white\", edgecolor=\"black\")\ngdf.plot(ax=ax, column=\"LC0_Desc\", categorical=True, legend=True, marker=\".\", markersize=10)\nplt.title(\"Mainland France: Land Cover Categories (LC0_Desc)\")\nplt.tight_layout()\nplt.savefig(\"plots/plot7.png\")"
    },
    {
      "question": "Display all points located within 100 km of London and color them by LC0_Desc.",
      "code": "import os\nimport pandas as pd\nimport geopandas as gpd\nimport matplotlib.pyplot as plt\nfrom shapely.geometry import Point\n\nos.makedirs(\"plots\", exist_ok=True)\ndf = pd.read_csv(\"LUCAS_with_country_info.csv\")\ndf = df.dropna(subset=[\"TH_LONG\", \"TH_LAT\", \"LC0_Desc\"])\ngdf = gpd.GeoDataFrame(df, geometry=gpd.points_from_xy(df.TH_LONG, df.TH_LAT), crs=\"EPSG:4326\")\ngdf_proj = gdf.to_crs(epsg=3857)\nlondon = gpd.GeoSeries([Point(-0.1276, 51.5074)], crs=\"EPSG:4326\").to_crs(epsg=3857)\nbuffer = london.buffer(100000)\ngdf_near_london = gdf_proj[gdf_proj.geometry.within(buffer.iloc[0])].to_crs(epsg=4326)\ncountries = gpd.read_file(\"../natural_earth_data/ne_10m_admin_0_countries.shp\").to_crs(\"EPSG:4326\")\nuk = countries[countries[\"NAME\"] == \"United Kingdom\"]\nfig, ax = plt.subplots(figsize=(10, 10))\nuk.plot(ax=ax, color=\"white\", edgecolor=\"black\")\nif not gdf_near_london.empty:\n    gdf_near_london.plot(ax=ax, column=\"LC0_Desc\", categorical=True, legend=True, markersize=10, marker=\".\")\n    ax.set_aspect(\"auto\")\n    plt.title(\"Points within 100km of London, colored by LC0_Desc\")\n    plt.tight_layout()\n    plt.savefig(\"plots/plot10.png\")\n    plt.show()\nelse:\n    print(\"No points found within 100 km of London.\")"
    },
    {
      "question": "Perform KMeans clustering on OC and K values and plot the clusters in Spain.",
      "code": "import os\nimport pandas as pd\nimport geopandas as gpd\nimport matplotlib.pyplot as plt\nfrom sklearn.cluster import KMeans\nos.makedirs(\"plots\", exist_ok=True)\ndf = pd.read_csv(\"LUCAS_with_country_info.csv\")\ndf = df[df[\"Country\"] == \"Spain\"]\ndf[\"OC\"] = pd.to_numeric(df[\"OC\"], errors=\"coerce\")\ndf[\"K\"] = pd.to_numeric(df[\"K\"], errors=\"coerce\")\ndf[\"TH_LAT\"] = pd.to_numeric(df[\"TH_LAT\"], errors=\"coerce\")\ndf[\"TH_LONG\"] = pd.to_numeric(df[\"TH_LONG\"], errors=\"coerce\")\ndf = df.dropna(subset=[\"OC\", \"K\", \"TH_LAT\", \"TH_LONG\"])\nX = df[[\"OC\", \"K\"]]\nkmeans = KMeans(n_clusters=4, random_state=0)\ndf[\"cluster\"] = kmeans.fit_predict(X)\ngdf = gpd.GeoDataFrame(df, geometry=gpd.points_from_xy(df.TH_LONG, df.TH_LAT), crs=\"EPSG:4326\")\ncountries = gpd.read_file(\"../natural_earth_data/ne_10m_admin_0_countries.shp\").to_crs(\"EPSG:4326\")\nspain = countries[countries[\"NAME\"] == \"Spain\"]\nfig, ax = plt.subplots(figsize=(10, 10))\nspain.plot(ax=ax, color=\"white\", edgecolor=\"black\")\ngdf.plot(ax=ax, column=\"cluster\", cmap=\"tab10\", legend=True, marker=\".\", markersize=10)\nplt.title(\"Spain: KMeans Clusters on OC and K\")\nplt.tight_layout()\nplt.savefig(\"plots/plot8.png\")"
    },
    {
      "question": "Compute the average 'pH_H2O' per NUTS2 region in Germany and show it on a choropleth map.",
      "code": "import os\nimport geopandas as gpd\nimport matplotlib.pyplot as plt\n\nos.makedirs(\"plots\", exist_ok=True)\ngdf = gpd.read_file(\"geo_df.gpkg\")\ngdf = gdf.dropna(subset=[\"pH_H2O\", \"NUTS_2\"])\ngdf = gdf[gdf[\"NUTS_0\"] == \"DE\"]\nchoropleth = gdf.dissolve(by=\"NUTS_2\", aggfunc={\"pH_H2O\": \"mean\"}).reset_index()\ncountries = gpd.read_file(\"../natural_earth_data/ne_10m_admin_0_countries.shp\").to_crs(gdf.crs)\ngermany_border = countries[countries[\"NAME\"] == \"Germany\"]\nfig, ax = plt.subplots(figsize=(10, 10))\ngermany_border.plot(ax=ax, color=\"white\", edgecolor=\"black\")\nchoropleth.plot(column=\"pH_H2O\", ax=ax, cmap=\"YlGnBu\", legend=True, edgecolor=\"black\")\nax.set_title(\"Average pH_H2O per NUTS2 Region in Germany\")\nplt.tight_layout()\nplt.savefig(\"plots/plot12.png\")\nplt.show()"
    },
    {
      "question": "Create a map of Italy where each point is colored by its LC0_Desc category.",
      "code": "import os\nimport pandas as pd\nimport geopandas as gpd\nimport matplotlib.pyplot as plt\nos.makedirs(\"plots\", exist_ok=True)\ndf = pd.read_csv(\"LUCAS_with_country_info.csv\")\ndf[\"TH_LAT\"] = pd.to_numeric(df[\"TH_LAT\"], errors=\"coerce\")\ndf[\"TH_LONG\"] = pd.to_numeric(df[\"TH_LONG\"], errors=\"coerce\")\ndf = df.dropna(subset=[\"TH_LAT\", \"TH_LONG\", \"LC0_Desc\"])\ndf = df[df[\"Country\"] == \"Italy\"]\ngdf = gpd.GeoDataFrame(df, geometry=gpd.points_from_xy(df.TH_LONG, df.TH_LAT), crs=\"EPSG:4326\")\ncountries = gpd.read_file(\"../natural_earth_data/ne_10m_admin_0_countries.shp\").to_crs(\"EPSG:4326\")\nitaly = countries[countries[\"NAME\"] == \"Italy\"]\nfig, ax = plt.subplots(figsize=(10, 10))\nitaly.plot(ax=ax, color=\"white\", edgecolor=\"black\")\ngdf.plot(ax=ax, column=\"LC0_Desc\", categorical=True, legend=True, marker=\".\", markersize=10)\nplt.title(\"Italy: Land Cover Categories (LC0_Desc)\")\nplt.tight_layout()\nplt.savefig(\"plots/plot9.png\")"
    }
  ]